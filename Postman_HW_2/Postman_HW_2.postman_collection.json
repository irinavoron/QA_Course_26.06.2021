{
	"info": {
		"_postman_id": "6889f4cb-ee67-4d71-b974-4844de98b8d0",
		"name": "Postman_HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"token\", jsonData.token);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "user",
							"type": "text"
						},
						{
							"key": "pass",
							"value": "123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"\r",
							"//Проверка структуры json в ответе\r",
							"let schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"person\": {\r",
							"                \"u_age\": 18,\r",
							"                \"u_name\": [\r",
							"                    \"Vova\",\r",
							"                    500,\r",
							"                    18\r",
							"                ],\r",
							"                \"u_salary_1_5_year\": 2000\r",
							"            },\r",
							"            \"qa_salary_after_12_months\": 1450.0,\r",
							"            \"qa_salary_after_6_months\": 1000,\r",
							"            \"start_qa_salary\": 500\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"person\",\r",
							"        \"qa_salary_after_12_months\",\r",
							"        \"qa_salary_after_6_months\",\r",
							"        \"start_qa_salary\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"person\": {\r",
							"            \"$id\": \"#/properties/person\",\r",
							"            \"type\": \"object\",\r",
							"            \"title\": \"The person schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": {},\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"u_age\": 18,\r",
							"                    \"u_name\": [\r",
							"                        \"Vova\",\r",
							"                        500,\r",
							"                        18\r",
							"                    ],\r",
							"                    \"u_salary_1_5_year\": 2000\r",
							"                }\r",
							"            ],\r",
							"            \"required\": [\r",
							"                \"u_age\",\r",
							"                \"u_name\",\r",
							"                \"u_salary_1_5_year\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"u_age\": {\r",
							"                    \"$id\": \"#/properties/person/properties/u_age\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The u_age schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        18\r",
							"                    ]\r",
							"                },\r",
							"                \"u_name\": {\r",
							"                    \"$id\": \"#/properties/person/properties/u_name\",\r",
							"                    \"type\": \"array\",\r",
							"                    \"title\": \"The u_name schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": [],\r",
							"                    \"examples\": [\r",
							"                        [\r",
							"                            \"Vova\",\r",
							"                            500\r",
							"                        ]\r",
							"                    ],\r",
							"                    \"additionalItems\": true,\r",
							"                    \"items\": {\r",
							"                        \"$id\": \"#/properties/person/properties/u_name/items\",\r",
							"                        \"anyOf\": [\r",
							"                            {\r",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/0\",\r",
							"                                \"type\": \"string\",\r",
							"                                \"title\": \"The first anyOf schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": \"\",\r",
							"                                \"examples\": [\r",
							"                                    \"Vova\"\r",
							"                                ]\r",
							"                            },\r",
							"                            {\r",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/1\",\r",
							"                                \"type\": \"integer\",\r",
							"                                \"title\": \"The second anyOf schema\",\r",
							"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                                \"default\": 0,\r",
							"                                \"examples\": [\r",
							"                                    500,\r",
							"                                    18\r",
							"                                ]\r",
							"                            }\r",
							"                        ]\r",
							"                    }\r",
							"                },\r",
							"                \"u_salary_1_5_year\": {\r",
							"                    \"$id\": \"#/properties/person/properties/u_salary_1_5_year\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The u_salary_1_5_year schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        2000\r",
							"                    ]\r",
							"                }\r",
							"            },\r",
							"            \"additionalProperties\": true\r",
							"        },\r",
							"        \"qa_salary_after_12_months\": {\r",
							"            \"$id\": \"#/properties/qa_salary_after_12_months\",\r",
							"            \"type\": \"number\",\r",
							"            \"title\": \"The qa_salary_after_12_months schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0.0,\r",
							"            \"examples\": [\r",
							"                1450.0\r",
							"            ]\r",
							"        },\r",
							"        \"qa_salary_after_6_months\": {\r",
							"            \"$id\": \"#/properties/qa_salary_after_6_months\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The qa_salary_after_6_months schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                1000\r",
							"            ]\r",
							"        },\r",
							"        \"start_qa_salary\": {\r",
							"            \"$id\": \"#/properties/start_qa_salary\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The start_qa_salary schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                500\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"};\r",
							"let resp = pm.response.json();\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(resp, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"//3.Проверка коэффициентов salary\r",
							"let req = JSON.parse(request.data)\r",
							"let salary = req.salary\r",
							"\r",
							"pm.test(\"Salary Multiplier Check\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(salary * 2);\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(salary * 2.9);\r",
							"    pm.expect(jsonData.person.u_salary_1_5_year).to.eql(salary * 4);\r",
							"});\r",
							"//4. Достать значение из поля \"u_salary_1.5_year\" в окружение\r",
							"pm.environment.set(\"salary\", jsonData.person.u_salary_1_5_year);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\":18,\r\n    \"salary\":800,\r\n    \"name\":\"Vova\",\r\n    \"auth_token\": \"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "/new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Статус-код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 2. Проверка структуры json в ответе",
							"let schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The root schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {",
							"            \"age\": 20,",
							"            \"name\": \"Vova\",",
							"            \"salary\": [",
							"                1500,",
							"                \"3000\",",
							"                \"4500\"",
							"            ]",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"age\",",
							"        \"name\",",
							"        \"salary\"",
							"    ],",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"$id\": \"#/properties/age\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The age schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                20",
							"            ]",
							"        },",
							"        \"name\": {",
							"            \"$id\": \"#/properties/name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Vova\"",
							"            ]",
							"        },",
							"        \"salary\": {",
							"            \"$id\": \"#/properties/salary\",",
							"            \"type\": \"array\",",
							"            \"title\": \"The salary schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": [],",
							"            \"examples\": [",
							"                [",
							"                    1500,",
							"                    \"3000\"",
							"                ]",
							"            ],",
							"            \"additionalItems\": true,",
							"            \"items\": {",
							"                \"$id\": \"#/properties/salary/items\",",
							"                \"anyOf\": [",
							"                    {",
							"                        \"$id\": \"#/properties/salary/items/anyOf/0\",",
							"                        \"type\": \"integer\",",
							"                        \"title\": \"The first anyOf schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": 0,",
							"                        \"examples\": [",
							"                            1500",
							"                        ]",
							"                    },",
							"                    {",
							"                        \"$id\": \"#/properties/salary/items/anyOf/1\",",
							"                        \"type\": \"string\",",
							"                        \"title\": \"The second anyOf schema\",",
							"                        \"description\": \"An explanation about the purpose of this instance.\",",
							"                        \"default\": \"\",",
							"                        \"examples\": [",
							"                            \"3000\",",
							"                            \"4500\"",
							"                        ]",
							"                    }",
							"                ]",
							"            }",
							"        }",
							"    },",
							"    \"additionalProperties\": false",
							"};",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"//3. Проверка коэффициентов salary",
							"let jsonData = pm.response.json();",
							"let req = request.data;",
							"let salary = parseInt(req.salary);",
							"pm.test(\"Salary Multiplier Check\", function () {",
							"    pm.expect(parseInt(jsonData.salary[1])).to.eql(salary * 2);",
							"    pm.expect(parseInt(jsonData.salary[2])).to.eql(salary * 3);",
							"});",
							"",
							"",
							"//4. Проверить, что второй элемент массива salary больше первого и нулевого",
							"pm.test(\"TheSecondIsHigher\", function () {",
							"    pm.expect(parseInt(jsonData.salary[2])).to.be.above(jsonData.salary[0]);",
							"    pm.expect(parseInt(jsonData.salary[2])).to.be.above(parseInt(jsonData.salary[1]));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "20",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Vova",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/new_data",
					"host": [
						"{{url}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "/test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Статус-код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//2. Проверка структуры json в ответе",
							"",
							"let schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The root schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {",
							"            \"age\": 25,",
							"            \"daily_food\": 0.66,",
							"            \"daily_sleep\": 137.5,",
							"            \"name\": \"Vova\"",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"age\",",
							"        \"daily_food\",",
							"        \"daily_sleep\",",
							"        \"name\"",
							"    ],",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"$id\": \"#/properties/age\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The age schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                25",
							"            ]",
							"        },",
							"        \"daily_food\": {",
							"            \"$id\": \"#/properties/daily_food\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The daily_food schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                0.66",
							"            ]",
							"        },",
							"        \"daily_sleep\": {",
							"            \"$id\": \"#/properties/daily_sleep\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The daily_sleep schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                137.5",
							"            ]",
							"        },",
							"        \"name\": {",
							"            \"$id\": \"#/properties/name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Vova\"",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"pm.test('Schema is valid', function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"//3. Проверка коэффициентов",
							"let jsonData = pm.response.json();",
							"let req = request.data;",
							"let weight = req.weight",
							"",
							"pm.test(\"Food Multiplier Check\", function () {",
							"    pm.expect(jsonData.daily_food/weight).to.eql(0.012);",
							"});",
							"",
							"pm.test(\"Sleep Miltiplier Check\", function () {",
							"    pm.expect(jsonData.daily_sleep).to.eql(weight * 2.5);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "25",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "54",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Vova",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/test_pet_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "/get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Статус-код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//2. Проверка структуры json",
							"",
							"let schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The root schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {",
							"            \"age\": \"40\",",
							"            \"family\": {",
							"                \"children\": [",
							"                    [",
							"                        \"Alex\",",
							"                        24",
							"                    ],",
							"                    [",
							"                        \"Kate\",",
							"                        12",
							"                    ]",
							"                ],",
							"                \"u_salary_1_5_year\": 4000",
							"            },",
							"            \"name\": \"Vova\",",
							"            \"salary\": 1000",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"age\",",
							"        \"family\",",
							"        \"name\",",
							"        \"salary\"",
							"    ],",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"$id\": \"#/properties/age\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The age schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"40\"",
							"            ]",
							"        },",
							"        \"family\": {",
							"            \"$id\": \"#/properties/family\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The family schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": {},",
							"            \"examples\": [",
							"                {",
							"                    \"children\": [",
							"                        [",
							"                            \"Alex\",",
							"                            24",
							"                        ],",
							"                        [",
							"                            \"Kate\",",
							"                            12",
							"                        ]",
							"                    ],",
							"                    \"u_salary_1_5_year\": 4000",
							"                }",
							"            ],",
							"            \"required\": [",
							"                \"children\",",
							"                \"u_salary_1_5_year\"",
							"            ],",
							"            \"properties\": {",
							"                \"children\": {",
							"                    \"$id\": \"#/properties/family/properties/children\",",
							"                    \"type\": \"array\",",
							"                    \"title\": \"The children schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": [],",
							"                    \"examples\": [",
							"                        [",
							"                            [",
							"                                \"Alex\",",
							"                                24",
							"                            ],",
							"                            [",
							"                                \"Kate\",",
							"                                12",
							"                            ]",
							"                        ]",
							"                    ],",
							"                    \"additionalItems\": true,",
							"                    \"items\": {",
							"                        \"$id\": \"#/properties/family/properties/children/items\",",
							"                        \"anyOf\": [",
							"                            {",
							"                                \"$id\": \"#/properties/family/properties/children/items/anyOf/0\",",
							"                                \"type\": \"array\",",
							"                                \"title\": \"The first anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": [],",
							"                                \"examples\": [",
							"                                    [",
							"                                        \"Alex\",",
							"                                        24",
							"                                    ]",
							"                                ],",
							"                                \"additionalItems\": true,",
							"                                \"items\": {",
							"                                    \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items\",",
							"                                    \"anyOf\": [",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items/anyOf/0\",",
							"                                            \"type\": \"string\",",
							"                                            \"title\": \"The first anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": \"\",",
							"                                            \"examples\": [",
							"                                                \"Alex\"",
							"                                            ]",
							"                                        },",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/0/items/anyOf/1\",",
							"                                            \"type\": \"integer\",",
							"                                            \"title\": \"The second anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": 0,",
							"                                            \"examples\": [",
							"                                                24",
							"                                            ]",
							"                                        }",
							"                                    ]",
							"                                }",
							"                            },",
							"                            {",
							"                                \"$id\": \"#/properties/family/properties/children/items/anyOf/1\",",
							"                                \"type\": \"array\",",
							"                                \"title\": \"The second anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": [],",
							"                                \"examples\": [",
							"                                    [",
							"                                        \"Kate\",",
							"                                        12",
							"                                    ]",
							"                                ],",
							"                                \"additionalItems\": true,",
							"                                \"items\": {",
							"                                    \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items\",",
							"                                    \"anyOf\": [",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items/anyOf/0\",",
							"                                            \"type\": \"string\",",
							"                                            \"title\": \"The first anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": \"\",",
							"                                            \"examples\": [",
							"                                                \"Kate\"",
							"                                            ]",
							"                                        },",
							"                                        {",
							"                                            \"$id\": \"#/properties/family/properties/children/items/anyOf/1/items/anyOf/1\",",
							"                                            \"type\": \"integer\",",
							"                                            \"title\": \"The second anyOf schema\",",
							"                                            \"description\": \"An explanation about the purpose of this instance.\",",
							"                                            \"default\": 0,",
							"                                            \"examples\": [",
							"                                                12",
							"                                            ]",
							"                                        }",
							"                                    ]",
							"                                }",
							"                            }",
							"                        ]",
							"                    }",
							"                },",
							"                \"u_salary_1_5_year\": {",
							"                    \"$id\": \"#/properties/family/properties/u_salary_1_5_year\",",
							"                    \"type\": \"integer\",",
							"                    \"title\": \"The u_salary_1_5_year schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": 0,",
							"                    \"examples\": [",
							"                        4000",
							"                    ]",
							"                }",
							"            },",
							"            \"additionalProperties\": true",
							"        },",
							"        \"name\": {",
							"            \"$id\": \"#/properties/name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Vova\"",
							"            ]",
							"        },",
							"        \"salary\": {",
							"            \"$id\": \"#/properties/salary\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The salary schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                1000",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"let jsonData = pm.response.json();",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"//3. Значение поля name = name в окружении",
							"pm.environment.set(\"name\", jsonData.name);",
							"",
							"pm.test(\"Name Check\", function () {",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\"));",
							"});",
							"",
							"//4.Значение поля age в ответе = поле age в запросе",
							"let req = request.data",
							"age = req.age",
							"pm.test(\"Age Check\", function () {",
							"     pm.expect(jsonData.age).to.eql(age);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "40",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Sasha",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/get_test_user",
					"host": [
						"{{url}}"
					],
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "/currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. С помощью random взять ID любого объекта в массиве и через окружение передать в следующий запрос.",
							"let jsonData = pm.response.json()",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/currency",
					"host": [
						"{{url}}"
					],
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "/curr_byn",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/curr_byn",
					"host": [
						"{{url}}"
					],
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}